local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Debris = game:GetService("Debris")

local rooms = workspace.CurrentRooms:GetChildren()
local currentRoomCount = #rooms
local room = rooms[#rooms - 1]
local floor = room:FindFirstChild("Parts") and room.Parts:FindFirstChild("Floor")
if not floor then return end
local position = floor.Position + Vector3.new(0, 3, 0)

local fakeModel = game:GetObjects("rbxassetid://73060955641698")[1]
fakeModel.Name = "FakeNyxgrin"
fakeModel.Parent = workspace
fakeModel:PivotTo(CFrame.new(position))

local model
local heartbeatConn
local active = true

task.delay(3, function()
	if not active then return end
	if fakeModel and fakeModel.Parent then fakeModel:Destroy() end

	model = game:GetObjects("rbxassetid://100439413457765")[1]
	model.Name = "Nyxgrin"
	model.Parent = workspace
	model:PivotTo(CFrame.new(position))

	task.spawn(function()
		while active do
			for _, obj in ipairs(room:GetDescendants()) do
				if obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
					obj.Enabled = not obj.Enabled
				end
			end
			task.wait(0.1)
		end
	end)

	for _, player in ipairs(Players:GetPlayers()) do
		pcall(function()
			local camScript = Instance.new("LocalScript")
			camScript.Name = "CameraShake"
			camScript.Source = [[
				local cam = workspace.CurrentCamera
				local RS = game:GetService("RunService")
				local start = tick()
				local duration = 1.2
				local intensity = 2.5
				RS:BindToRenderStep("ShakeEffect", 200, function()
					local elapsed = tick() - start
					if elapsed > duration then RS:UnbindFromRenderStep("ShakeEffect") return end
					local offset = Vector3.new(
						math.random(-intensity*100, intensity*100)/100,
						math.random(-intensity*100, intensity*100)/100,
						math.random(-intensity*100, intensity*100)/100
					)
					cam.CFrame = cam.CFrame * CFrame.new(offset)
				end)
			]]
			camScript.Parent = player:WaitForChild("PlayerGui")
		end)
	end

	local HUT_RADIUS, KILL_RADIUS, FORCE = 666, 4, 10
	heartbeatConn = RunService.Heartbeat:Connect(function(dt)
		if not active then return end
		for _, player in ipairs(Players:GetPlayers()) do
			local char = player.Character
			if not char then continue end
			local hrp = char:FindFirstChild("HumanoidRootPart")
			local hum = char:FindFirstChildOfClass("Humanoid")
			if not hrp or not hum or hum.Health <= 0 then continue end

			local dist = (hrp.Position - position).Magnitude
			if dist <= HUT_RADIUS and dist > KILL_RADIUS then
				local dir = (position - hrp.Position).Unit
				hrp.CFrame = hrp.CFrame + dir * FORCE * dt
			elseif dist <= KILL_RADIUS then
				local tag = Instance.new("ObjectValue")
				tag.Name = "creator"
				tag.Value = workspace
				tag.Parent = hum
				Debris:AddItem(tag, 2)
				hum.Health = 0
			end
		end
	end)

	for _, part in ipairs(model:GetDescendants()) do
		if part:IsA("BasePart") then
			part.Touched:Connect(function(hit)
				local char = hit:FindFirstAncestorWhichIsA("Model")
				if char and Players:GetPlayerFromCharacter(char) then
					local hum = char:FindFirstChildOfClass("Humanoid")
					if hum and hum.Health > 0 then
						local tag = Instance.new("ObjectValue")
						tag.Name = "creator"
						tag.Value = workspace
						tag.Parent = hum
						Debris:AddItem(tag, 2)
						hum.Health = 0
					end
				end
			end)
		end
	end
end)

workspace.CurrentRooms.ChildAdded:Connect(function()
	task.wait(0.5)
	local newCount = #workspace.CurrentRooms:GetChildren()
	if newCount > currentRoomCount then
		currentRoomCount = newCount
		active = false

		if heartbeatConn then heartbeatConn:Disconnect() end
		if model and model.Parent then model:Destroy() end

		local newFake = game:GetObjects("rbxassetid://73060955641698")[1]
		newFake.Name = "FakeNyxgrin"
		newFake.Parent = workspace
		newFake:PivotTo(CFrame.new(position))

		for _, part in ipairs(newFake:GetDescendants()) do
			if part:IsA("BasePart") then
				part.Transparency = 0
				local tween = TweenService:Create(part, TweenInfo.new(3), {Transparency = 1})
				tween:Play()
			end
		end

		task.delay(3, function()
			if newFake and newFake.Parent then
				newFake:Destroy()
			end
		end)
	end
end
